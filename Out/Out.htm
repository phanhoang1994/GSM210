<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Out\Out.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Out\Out.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Tue Mar 24 11:37:29 2020
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
eGSMSendCmd &rArr; ui8GSMSendATCommand &rArr; vUART6Send
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1b]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[10]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">SysCtlDelay</a><BR>
 <LI><a href="#[1a]">UARTCharGet</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">UARTCharGet</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 110 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[c]">eGSMSendCmd</a> from gsm.o(i.eGSMSendCmd) referenced from gsm.o(i.ui8GSMPoll)
 <LI><a href="#[c]">eGSMSendCmd</a> from gsm.o(i.eGSMSendCmd) referenced from gsm.o(i.vReadSignal)
 <LI><a href="#[b]">eGSMSendMsg</a> from gsm.o(i.eGSMSendMsg) referenced from gsm.o(i.eGSMWaitSendMsg)
 <LI><a href="#[9]">eGSMWaitOK</a> from gsm.o(i.eGSMWaitOK) referenced from gsm.o(i.eGSMSendCmd)
 <LI><a href="#[9]">eGSMWaitOK</a> from gsm.o(i.eGSMWaitOK) referenced from gsm.o(i.eGSMSendMsg)
 <LI><a href="#[a]">eGSMWaitSendMsg</a> from gsm.o(i.eGSMWaitSendMsg) referenced from gsm.o(i.eGSMSendCmd)
 <LI><a href="#[8]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[4]">vSysTickHandler</a> from sysclock.o(i.vSysTickHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">vUART4Handler</a> from uart4.o(i.vUART4Handler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">vUART6Handler</a> from uart6.o(i.vUART6Handler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">vWDTHandler</a> from main.o(i.vWDTHandler) referenced from startup_rvmdk.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[51]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[11]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[52]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[53]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[54]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[55]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[56]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[10]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[57]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[58]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[18]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[59]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[5a]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[5b]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[1d]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand2
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMSendCmd
</UL>

<P><STRONG><a name="[21]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSignal
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckAccount
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMWaitStatusReadNoPhone
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMWaitStatusCall
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMWaitSendMsg
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMWaitOK
</UL>

<P><STRONG><a name="[32]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand2
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand
</UL>

<P><STRONG><a name="[1c]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand2
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMSendCmd
</UL>

<P><STRONG><a name="[f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[14]"></a>GPIOPadConfigSet</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainConfig
</UL>

<P><STRONG><a name="[44]"></a>GPIOPinConfigure</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
</UL>

<P><STRONG><a name="[3c]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInput
</UL>

<P><STRONG><a name="[12]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeGPIOInput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainConfig
</UL>

<P><STRONG><a name="[15]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainConfig
</UL>

<P><STRONG><a name="[16]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
</UL>

<P><STRONG><a name="[1e]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMUpdate
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMSendCmd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Send
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTickHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMConfig
</UL>

<P><STRONG><a name="[46]"></a>IntEnable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWDTConfig
</UL>

<P><STRONG><a name="[17]"></a>IntMasterEnable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>

<P><STRONG><a name="[45]"></a>SysCtlClockGet</STRONG> (Thumb, 304 bytes, Stack size 12 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWDTConfig
</UL>

<P><STRONG><a name="[19]"></a>SysCtlClockSet</STRONG> (Thumb, 270 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>

<P><STRONG><a name="[3d]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWDTConfig
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainConfig
</UL>

<P><STRONG><a name="[43]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[3f]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTickConfig
</UL>

<P><STRONG><a name="[3e]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTickConfig
</UL>

<P><STRONG><a name="[1a]"></a>UARTCharGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharGet))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Handler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Handler
</UL>

<P><STRONG><a name="[4b]"></a>UARTCharPutNonBlocking</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UARTCharPutNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Send
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Send
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Handler
</UL>

<P><STRONG><a name="[4c]"></a>UARTCharsAvail</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTCharsAvail))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Handler
</UL>

<P><STRONG><a name="[1b]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
</UL>

<P><STRONG><a name="[48]"></a>UARTFIFOLevelSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart.o(i.UARTFIFOLevelSet))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
</UL>

<P><STRONG><a name="[4a]"></a>UARTIntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(i.UARTIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Handler
</UL>

<P><STRONG><a name="[47]"></a>UARTIntEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(i.UARTIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
</UL>

<P><STRONG><a name="[49]"></a>UARTIntStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Handler
</UL>

<P><STRONG><a name="[4f]"></a>WatchdogEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogEnable))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWDTConfig
</UL>

<P><STRONG><a name="[50]"></a>WatchdogIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWDTHandler
</UL>

<P><STRONG><a name="[4d]"></a>WatchdogReloadSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogReloadSet))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWDTConfig
</UL>

<P><STRONG><a name="[4e]"></a>WatchdogResetEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogResetEnable))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWDTConfig
</UL>

<P><STRONG><a name="[5d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[5e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[5f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[c]"></a>eGSMSendCmd</STRONG> (Thumb, 314 bytes, Stack size 128 bytes, gsm.o(i.eGSMSendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = eGSMSendCmd &rArr; ui8GSMSendATCommand &rArr; vUART6Send
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gsm.o(i.ui8GSMPoll)
<LI> gsm.o(i.vReadSignal)
</UL>
<P><STRONG><a name="[b]"></a>eGSMSendMsg</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gsm.o(i.eGSMSendMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = eGSMSendMsg &rArr; ui8GSMSendATCommand2 &rArr; vUART6Send
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(i.eGSMWaitSendMsg)
</UL>
<P><STRONG><a name="[9]"></a>eGSMWaitOK</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gsm.o(i.eGSMWaitOK))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = eGSMWaitOK &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPostMsg
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gsm.o(i.eGSMSendCmd)
<LI> gsm.o(i.eGSMSendMsg)
</UL>
<P><STRONG><a name="[a]"></a>eGSMWaitSendMsg</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gsm.o(i.eGSMWaitSendMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = eGSMWaitSendMsg &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(i.eGSMSendCmd)
</UL>
<P><STRONG><a name="[23]"></a>eGSMWaitStatusCall</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gsm.o(i.eGSMWaitStatusCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = eGSMWaitStatusCall &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMUpdate
</UL>

<P><STRONG><a name="[24]"></a>eGSMWaitStatusReadNoPhone</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gsm.o(i.eGSMWaitStatusReadNoPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = eGSMWaitStatusReadNoPhone &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadPhonebook
</UL>

<P><STRONG><a name="[8]"></a>main</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = main &rArr; vTaskScheduler &rArr; vSysTickTimerExpired &rArr; ui8GSMPoll &rArr; vGSMUpdate &rArr; ui8GSMSendATCmdCall &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskScheduler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2e]"></a>ui8GSMGetMsg</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gsm.o(i.ui8GSMGetMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui8GSMGetMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSignal
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
</UL>

<P><STRONG><a name="[28]"></a>ui8GSMPoll</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, gsm.o(i.ui8GSMPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ui8GSMPoll &rArr; vGSMUpdate &rArr; ui8GSMSendATCmdCall &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSignal
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadPhonebook
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMUpdate
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckAccount
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMGetMsg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Send
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTickTimerExpired
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[22]"></a>ui8GSMPostMsg</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gsm.o(i.ui8GSMPostMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui8GSMPostMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSignal
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMUpdate
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckAccount
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vATCmdConfig
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCmdReadNoPhone
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCmdDisCall
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCmdCall
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMWaitOK
</UL>

<P><STRONG><a name="[2f]"></a>ui8GSMSendATCmdCall</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gsm.o(i.ui8GSMSendATCmdCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui8GSMSendATCmdCall &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPostMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMUpdate
</UL>

<P><STRONG><a name="[30]"></a>ui8GSMSendATCmdDisCall</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gsm.o(i.ui8GSMSendATCmdDisCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ui8GSMSendATCmdDisCall &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPostMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMUpdate
</UL>

<P><STRONG><a name="[31]"></a>ui8GSMSendATCmdReadNoPhone</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gsm.o(i.ui8GSMSendATCmdReadNoPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ui8GSMSendATCmdReadNoPhone &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPostMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadPhonebook
</UL>

<P><STRONG><a name="[1f]"></a>ui8GSMSendATCommand</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gsm.o(i.ui8GSMSendATCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ui8GSMSendATCommand &rArr; vUART6Send
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Send
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMSendCmd
</UL>

<P><STRONG><a name="[20]"></a>ui8GSMSendATCommand2</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gsm.o(i.ui8GSMSendATCommand2))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui8GSMSendATCommand2 &rArr; vUART6Send
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Send
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMSendMsg
</UL>

<P><STRONG><a name="[42]"></a>ui8GetEvent</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, event.o(i.ui8GetEvent))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskScheduler
</UL>

<P><STRONG><a name="[41]"></a>ui8PostEvent</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, event.o(i.ui8PostEvent))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTickTimerExpired
</UL>

<P><STRONG><a name="[34]"></a>vATCmdConfig</STRONG> (Thumb, 230 bytes, Stack size 12 bytes, gsm.o(i.vATCmdConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = vATCmdConfig &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPostMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMConfig
</UL>

<P><STRONG><a name="[2b]"></a>vCheckAccount</STRONG> (Thumb, 446 bytes, Stack size 24 bytes, gsm.o(i.vCheckAccount))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vCheckAccount &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPostMsg
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
</UL>

<P><STRONG><a name="[35]"></a>vGSMConfig</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gsm.o(i.vGSMConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vGSMConfig &rArr; vATCmdConfig &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vATCmdConfig
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>

<P><STRONG><a name="[2a]"></a>vGSMUpdate</STRONG> (Thumb, 488 bytes, Stack size 40 bytes, gsm.o(i.vGSMUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vGSMUpdate &rArr; ui8GSMSendATCmdCall &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCmdDisCall
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCmdCall
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPostMsg
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMWaitStatusCall
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
</UL>

<P><STRONG><a name="[25]"></a>vHardwareConfig</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.vHardwareConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = vHardwareConfig &rArr; vUART4Config &rArr; GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART6Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUART4Config
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTickConfig
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGSMConfig
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWDTConfig
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>vInput</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, sysclock.o(i.vInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vInput
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTickTimerExpired
</UL>

<P><STRONG><a name="[36]"></a>vMainConfig</STRONG> (Thumb, 250 bytes, Stack size 8 bytes, main.o(i.vMainConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vMainConfig &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>

<P><STRONG><a name="[29]"></a>vReadPhonebook</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, gsm.o(i.vReadPhonebook))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vReadPhonebook &rArr; eGSMWaitStatusReadNoPhone &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCmdReadNoPhone
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eGSMWaitStatusReadNoPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
</UL>

<P><STRONG><a name="[2c]"></a>vReadSignal</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gsm.o(i.vReadSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vReadSignal &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPostMsg
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMGetMsg
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
</UL>

<P><STRONG><a name="[39]"></a>vSysTickConfig</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sysclock.o(i.vSysTickConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vSysTickConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>

<P><STRONG><a name="[4]"></a>vSysTickHandler</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, sysclock.o(i.vSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vSysTickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>vSysTickTimerExpired</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, sysclock.o(i.vSysTickTimerExpired))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = vSysTickTimerExpired &rArr; ui8GSMPoll &rArr; vGSMUpdate &rArr; ui8GSMSendATCmdCall &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInput
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8PostEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskScheduler
</UL>

<P><STRONG><a name="[27]"></a>vTaskScheduler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, task.o(i.vTaskScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = vTaskScheduler &rArr; vSysTickTimerExpired &rArr; ui8GSMPoll &rArr; vGSMUpdate &rArr; ui8GSMSendATCmdCall &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTickTimerExpired
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>vTaskStartScheduler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, task.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = vTaskStartScheduler &rArr; ui8GSMPoll &rArr; vGSMUpdate &rArr; ui8GSMSendATCmdCall &rArr; ui8GSMPostMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>vUART4Config</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, uart4.o(i.vUART4Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = vUART4Config &rArr; GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntEnable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFIFOLevelSet
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>

<P><STRONG><a name="[6]"></a>vUART4Handler</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, uart4.o(i.vUART4Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vUART4Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntStatus
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPutNonBlocking
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>vUART4Send</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, uart4.o(i.vUART4Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vUART4Send
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPutNonBlocking
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMPoll
</UL>

<P><STRONG><a name="[37]"></a>vUART6Config</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, uart6.o(i.vUART6Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vUART6Config &rArr; GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntEnable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFIFOLevelSet
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>

<P><STRONG><a name="[7]"></a>vUART6Handler</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, uart6.o(i.vUART6Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vUART6Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntStatus
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPutNonBlocking
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>vUART6Send</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uart6.o(i.vUART6Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vUART6Send
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPutNonBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand2
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui8GSMSendATCommand
</UL>

<P><STRONG><a name="[3a]"></a>vWDTConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.vWDTConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vWDTConfig &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogResetEnable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogReloadSet
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogEnable
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHardwareConfig
</UL>

<P><STRONG><a name="[5]"></a>vWDTHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.vWDTHandler))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
